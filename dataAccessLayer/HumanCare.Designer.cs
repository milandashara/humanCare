//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HumanCareModel", "FK_Appointment_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(dataAccessLayer.Patient), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(dataAccessLayer.Appointment), true)]
[assembly: EdmRelationshipAttribute("HumanCareModel", "FK_Appointment_RoomAssignment", "RoomAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(dataAccessLayer.RoomAssignment), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(dataAccessLayer.Appointment), true)]
[assembly: EdmRelationshipAttribute("HumanCareModel", "FK_RoomAssignment_Doctor1", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(dataAccessLayer.Doctor), "RoomAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(dataAccessLayer.RoomAssignment), true)]
[assembly: EdmRelationshipAttribute("HumanCareModel", "FK_Prescription_Medicine", "Medicine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(dataAccessLayer.Medicine), "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(dataAccessLayer.Prescription), true)]
[assembly: EdmRelationshipAttribute("HumanCareModel", "FK_Prescription_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(dataAccessLayer.Patient), "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(dataAccessLayer.Prescription), true)]
[assembly: EdmRelationshipAttribute("HumanCareModel", "FK_Prescription_RoomAssignment", "RoomAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(dataAccessLayer.RoomAssignment), "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(dataAccessLayer.Prescription), true)]
[assembly: EdmRelationshipAttribute("HumanCareModel", "FK_Treatment_Refer", "Refer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(dataAccessLayer.Refer), "Treatment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(dataAccessLayer.Treatment), true)]
[assembly: EdmRelationshipAttribute("HumanCareModel", "FK_RoomAssignment_Room1", "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(dataAccessLayer.Room), "RoomAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(dataAccessLayer.RoomAssignment), true)]
[assembly: EdmRelationshipAttribute("HumanCareModel", "FK_Slot_RoomAssignment", "RoomAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(dataAccessLayer.RoomAssignment), "Slot", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(dataAccessLayer.Slot), true)]
[assembly: EdmRelationshipAttribute("HumanCareModel", "FK_Treatment_RoomAssignment", "RoomAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(dataAccessLayer.RoomAssignment), "Treatment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(dataAccessLayer.Treatment), true)]

#endregion

namespace dataAccessLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HumanCareEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HumanCareEntities object using the connection string found in the 'HumanCareEntities' section of the application configuration file.
        /// </summary>
        public HumanCareEntities() : base("name=HumanCareEntities", "HumanCareEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HumanCareEntities object.
        /// </summary>
        public HumanCareEntities(string connectionString) : base(connectionString, "HumanCareEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HumanCareEntities object.
        /// </summary>
        public HumanCareEntities(EntityConnection connection) : base(connection, "HumanCareEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Appointment> Appointments
        {
            get
            {
                if ((_Appointments == null))
                {
                    _Appointments = base.CreateObjectSet<Appointment>("Appointments");
                }
                return _Appointments;
            }
        }
        private ObjectSet<Appointment> _Appointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doctor> Doctors
        {
            get
            {
                if ((_Doctors == null))
                {
                    _Doctors = base.CreateObjectSet<Doctor>("Doctors");
                }
                return _Doctors;
            }
        }
        private ObjectSet<Doctor> _Doctors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Medicine> Medicines
        {
            get
            {
                if ((_Medicines == null))
                {
                    _Medicines = base.CreateObjectSet<Medicine>("Medicines");
                }
                return _Medicines;
            }
        }
        private ObjectSet<Medicine> _Medicines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Prescription> Prescriptions
        {
            get
            {
                if ((_Prescriptions == null))
                {
                    _Prescriptions = base.CreateObjectSet<Prescription>("Prescriptions");
                }
                return _Prescriptions;
            }
        }
        private ObjectSet<Prescription> _Prescriptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Refer> Refers
        {
            get
            {
                if ((_Refers == null))
                {
                    _Refers = base.CreateObjectSet<Refer>("Refers");
                }
                return _Refers;
            }
        }
        private ObjectSet<Refer> _Refers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Room> Rooms
        {
            get
            {
                if ((_Rooms == null))
                {
                    _Rooms = base.CreateObjectSet<Room>("Rooms");
                }
                return _Rooms;
            }
        }
        private ObjectSet<Room> _Rooms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoomAssignment> RoomAssignments
        {
            get
            {
                if ((_RoomAssignments == null))
                {
                    _RoomAssignments = base.CreateObjectSet<RoomAssignment>("RoomAssignments");
                }
                return _RoomAssignments;
            }
        }
        private ObjectSet<RoomAssignment> _RoomAssignments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Slot> Slots
        {
            get
            {
                if ((_Slots == null))
                {
                    _Slots = base.CreateObjectSet<Slot>("Slots");
                }
                return _Slots;
            }
        }
        private ObjectSet<Slot> _Slots;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Treatment> Treatments
        {
            get
            {
                if ((_Treatments == null))
                {
                    _Treatments = base.CreateObjectSet<Treatment>("Treatments");
                }
                return _Treatments;
            }
        }
        private ObjectSet<Treatment> _Treatments;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Appointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppointments(Appointment appointment)
        {
            base.AddObject("Appointments", appointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Doctors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctors(Doctor doctor)
        {
            base.AddObject("Doctors", doctor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Medicines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicines(Medicine medicine)
        {
            base.AddObject("Medicines", medicine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Prescriptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrescriptions(Prescription prescription)
        {
            base.AddObject("Prescriptions", prescription);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Refers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRefers(Refer refer)
        {
            base.AddObject("Refers", refer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rooms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRooms(Room room)
        {
            base.AddObject("Rooms", room);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoomAssignments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoomAssignments(RoomAssignment roomAssignment)
        {
            base.AddObject("RoomAssignments", roomAssignment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Slots EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSlots(Slot slot)
        {
            base.AddObject("Slots", slot);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Treatments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTreatments(Treatment treatment)
        {
            base.AddObject("Treatments", treatment);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HumanCareModel", Name="Appointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Appointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Appointment object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="startTime">Initial value of the startTime property.</param>
        /// <param name="endTime">Initial value of the endTime property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="patient">Initial value of the patient property.</param>
        public static Appointment CreateAppointment(global::System.Int32 id, global::System.DateTime startTime, global::System.DateTime endTime, global::System.String description, global::System.Int32 patient)
        {
            Appointment appointment = new Appointment();
            appointment.id = id;
            appointment.startTime = startTime;
            appointment.endTime = endTime;
            appointment.description = description;
            appointment.patient = patient;
            return appointment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime startTime
        {
            get
            {
                return _startTime;
            }
            set
            {
                OnstartTimeChanging(value);
                ReportPropertyChanging("startTime");
                _startTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("startTime");
                OnstartTimeChanged();
            }
        }
        private global::System.DateTime _startTime;
        partial void OnstartTimeChanging(global::System.DateTime value);
        partial void OnstartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime endTime
        {
            get
            {
                return _endTime;
            }
            set
            {
                OnendTimeChanging(value);
                ReportPropertyChanging("endTime");
                _endTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("endTime");
                OnendTimeChanged();
            }
        }
        private global::System.DateTime _endTime;
        partial void OnendTimeChanging(global::System.DateTime value);
        partial void OnendTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 patient
        {
            get
            {
                return _patient;
            }
            set
            {
                OnpatientChanging(value);
                ReportPropertyChanging("patient");
                _patient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("patient");
                OnpatientChanged();
            }
        }
        private global::System.Int32 _patient;
        partial void OnpatientChanging(global::System.Int32 value);
        partial void OnpatientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> roomAssigned
        {
            get
            {
                return _roomAssigned;
            }
            set
            {
                OnroomAssignedChanging(value);
                ReportPropertyChanging("roomAssigned");
                _roomAssigned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("roomAssigned");
                OnroomAssignedChanged();
            }
        }
        private Nullable<global::System.Int32> _roomAssigned;
        partial void OnroomAssignedChanging(Nullable<global::System.Int32> value);
        partial void OnroomAssignedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Appointment_Patient", "Patient")]
        public Patient Patient1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HumanCareModel.FK_Appointment_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HumanCareModel.FK_Appointment_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> Patient1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HumanCareModel.FK_Appointment_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("HumanCareModel.FK_Appointment_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Appointment_RoomAssignment", "RoomAssignment")]
        public RoomAssignment RoomAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAssignment>("HumanCareModel.FK_Appointment_RoomAssignment", "RoomAssignment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAssignment>("HumanCareModel.FK_Appointment_RoomAssignment", "RoomAssignment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoomAssignment> RoomAssignmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAssignment>("HumanCareModel.FK_Appointment_RoomAssignment", "RoomAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoomAssignment>("HumanCareModel.FK_Appointment_RoomAssignment", "RoomAssignment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HumanCareModel", Name="Doctor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doctor object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="fullName">Initial value of the fullName property.</param>
        /// <param name="address">Initial value of the address property.</param>
        /// <param name="city">Initial value of the city property.</param>
        /// <param name="country">Initial value of the country property.</param>
        /// <param name="phoneNumber">Initial value of the phoneNumber property.</param>
        /// <param name="dob">Initial value of the dob property.</param>
        /// <param name="email">Initial value of the email property.</param>
        /// <param name="experience">Initial value of the experience property.</param>
        /// <param name="speciality">Initial value of the speciality property.</param>
        public static Doctor CreateDoctor(global::System.Int32 id, global::System.String fullName, global::System.Byte[] address, global::System.String city, global::System.String country, global::System.Int32 phoneNumber, global::System.DateTime dob, global::System.Byte[] email, global::System.Int32 experience, global::System.String speciality)
        {
            Doctor doctor = new Doctor();
            doctor.id = id;
            doctor.fullName = fullName;
            doctor.address = address;
            doctor.city = city;
            doctor.country = country;
            doctor.phoneNumber = phoneNumber;
            doctor.dob = dob;
            doctor.email = email;
            doctor.experience = experience;
            doctor.speciality = speciality;
            return doctor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fullName
        {
            get
            {
                return _fullName;
            }
            set
            {
                OnfullNameChanging(value);
                ReportPropertyChanging("fullName");
                _fullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("fullName");
                OnfullNameChanged();
            }
        }
        private global::System.String _fullName;
        partial void OnfullNameChanging(global::System.String value);
        partial void OnfullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] address
        {
            get
            {
                return StructuralObject.GetValidValue(_address);
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.Byte[] _address;
        partial void OnaddressChanging(global::System.Byte[] value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 phoneNumber
        {
            get
            {
                return _phoneNumber;
            }
            set
            {
                OnphoneNumberChanging(value);
                ReportPropertyChanging("phoneNumber");
                _phoneNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("phoneNumber");
                OnphoneNumberChanged();
            }
        }
        private global::System.Int32 _phoneNumber;
        partial void OnphoneNumberChanging(global::System.Int32 value);
        partial void OnphoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dob
        {
            get
            {
                return _dob;
            }
            set
            {
                OndobChanging(value);
                ReportPropertyChanging("dob");
                _dob = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dob");
                OndobChanged();
            }
        }
        private global::System.DateTime _dob;
        partial void OndobChanging(global::System.DateTime value);
        partial void OndobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] email
        {
            get
            {
                return StructuralObject.GetValidValue(_email);
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.Byte[] _email;
        partial void OnemailChanging(global::System.Byte[] value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 experience
        {
            get
            {
                return _experience;
            }
            set
            {
                OnexperienceChanging(value);
                ReportPropertyChanging("experience");
                _experience = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("experience");
                OnexperienceChanged();
            }
        }
        private global::System.Int32 _experience;
        partial void OnexperienceChanging(global::System.Int32 value);
        partial void OnexperienceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String speciality
        {
            get
            {
                return _speciality;
            }
            set
            {
                OnspecialityChanging(value);
                ReportPropertyChanging("speciality");
                _speciality = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("speciality");
                OnspecialityChanged();
            }
        }
        private global::System.String _speciality;
        partial void OnspecialityChanging(global::System.String value);
        partial void OnspecialityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_RoomAssignment_Doctor1", "RoomAssignment")]
        public EntityCollection<RoomAssignment> RoomAssignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoomAssignment>("HumanCareModel.FK_RoomAssignment_Doctor1", "RoomAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoomAssignment>("HumanCareModel.FK_RoomAssignment_Doctor1", "RoomAssignment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HumanCareModel", Name="Medicine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medicine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medicine object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="company">Initial value of the company property.</param>
        public static Medicine CreateMedicine(global::System.Int32 id, global::System.String description, global::System.String name, global::System.String company)
        {
            Medicine medicine = new Medicine();
            medicine.id = id;
            medicine.description = description;
            medicine.name = name;
            medicine.company = company;
            return medicine;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String company
        {
            get
            {
                return _company;
            }
            set
            {
                OncompanyChanging(value);
                ReportPropertyChanging("company");
                _company = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("company");
                OncompanyChanged();
            }
        }
        private global::System.String _company;
        partial void OncompanyChanging(global::System.String value);
        partial void OncompanyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Prescription_Medicine", "Prescription")]
        public EntityCollection<Prescription> Prescriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prescription>("HumanCareModel.FK_Prescription_Medicine", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prescription>("HumanCareModel.FK_Prescription_Medicine", "Prescription", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HumanCareModel", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="fullName">Initial value of the fullName property.</param>
        public static Patient CreatePatient(global::System.Int32 id, global::System.String fullName)
        {
            Patient patient = new Patient();
            patient.id = id;
            patient.fullName = fullName;
            return patient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fullName
        {
            get
            {
                return _fullName;
            }
            set
            {
                OnfullNameChanging(value);
                ReportPropertyChanging("fullName");
                _fullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("fullName");
                OnfullNameChanged();
            }
        }
        private global::System.String _fullName;
        partial void OnfullNameChanging(global::System.String value);
        partial void OnfullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] country
        {
            get
            {
                return StructuralObject.GetValidValue(_country);
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.Byte[] _country;
        partial void OncountryChanging(global::System.Byte[] value);
        partial void OncountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> phoneNumber
        {
            get
            {
                return _phoneNumber;
            }
            set
            {
                OnphoneNumberChanging(value);
                ReportPropertyChanging("phoneNumber");
                _phoneNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("phoneNumber");
                OnphoneNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _phoneNumber;
        partial void OnphoneNumberChanging(Nullable<global::System.Int32> value);
        partial void OnphoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dob
        {
            get
            {
                return _dob;
            }
            set
            {
                OndobChanging(value);
                ReportPropertyChanging("dob");
                _dob = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dob");
                OndobChanged();
            }
        }
        private Nullable<global::System.DateTime> _dob;
        partial void OndobChanging(Nullable<global::System.DateTime> value);
        partial void OndobChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Appointment_Patient", "Appointment")]
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("HumanCareModel.FK_Appointment_Patient", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("HumanCareModel.FK_Appointment_Patient", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Prescription_Patient", "Prescription")]
        public EntityCollection<Prescription> Prescriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prescription>("HumanCareModel.FK_Prescription_Patient", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prescription>("HumanCareModel.FK_Prescription_Patient", "Prescription", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HumanCareModel", Name="Prescription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prescription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Prescription object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="prescriptionDate">Initial value of the prescriptionDate property.</param>
        /// <param name="medicine">Initial value of the medicine property.</param>
        /// <param name="patient">Initial value of the patient property.</param>
        /// <param name="roomAssigned">Initial value of the roomAssigned property.</param>
        public static Prescription CreatePrescription(global::System.Int32 id, global::System.String description, global::System.DateTime prescriptionDate, global::System.Int32 medicine, global::System.Int32 patient, global::System.Int32 roomAssigned)
        {
            Prescription prescription = new Prescription();
            prescription.id = id;
            prescription.description = description;
            prescription.prescriptionDate = prescriptionDate;
            prescription.medicine = medicine;
            prescription.patient = patient;
            prescription.roomAssigned = roomAssigned;
            return prescription;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime prescriptionDate
        {
            get
            {
                return _prescriptionDate;
            }
            set
            {
                OnprescriptionDateChanging(value);
                ReportPropertyChanging("prescriptionDate");
                _prescriptionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("prescriptionDate");
                OnprescriptionDateChanged();
            }
        }
        private global::System.DateTime _prescriptionDate;
        partial void OnprescriptionDateChanging(global::System.DateTime value);
        partial void OnprescriptionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 medicine
        {
            get
            {
                return _medicine;
            }
            set
            {
                OnmedicineChanging(value);
                ReportPropertyChanging("medicine");
                _medicine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("medicine");
                OnmedicineChanged();
            }
        }
        private global::System.Int32 _medicine;
        partial void OnmedicineChanging(global::System.Int32 value);
        partial void OnmedicineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 patient
        {
            get
            {
                return _patient;
            }
            set
            {
                OnpatientChanging(value);
                ReportPropertyChanging("patient");
                _patient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("patient");
                OnpatientChanged();
            }
        }
        private global::System.Int32 _patient;
        partial void OnpatientChanging(global::System.Int32 value);
        partial void OnpatientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 roomAssigned
        {
            get
            {
                return _roomAssigned;
            }
            set
            {
                OnroomAssignedChanging(value);
                ReportPropertyChanging("roomAssigned");
                _roomAssigned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("roomAssigned");
                OnroomAssignedChanged();
            }
        }
        private global::System.Int32 _roomAssigned;
        partial void OnroomAssignedChanging(global::System.Int32 value);
        partial void OnroomAssignedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Prescription_Medicine", "Medicine")]
        public Medicine Medicine1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("HumanCareModel.FK_Prescription_Medicine", "Medicine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("HumanCareModel.FK_Prescription_Medicine", "Medicine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medicine> Medicine1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medicine>("HumanCareModel.FK_Prescription_Medicine", "Medicine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medicine>("HumanCareModel.FK_Prescription_Medicine", "Medicine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Prescription_Patient", "Patient")]
        public Patient Patient1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HumanCareModel.FK_Prescription_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HumanCareModel.FK_Prescription_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> Patient1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("HumanCareModel.FK_Prescription_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("HumanCareModel.FK_Prescription_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Prescription_RoomAssignment", "RoomAssignment")]
        public RoomAssignment RoomAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAssignment>("HumanCareModel.FK_Prescription_RoomAssignment", "RoomAssignment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAssignment>("HumanCareModel.FK_Prescription_RoomAssignment", "RoomAssignment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoomAssignment> RoomAssignmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAssignment>("HumanCareModel.FK_Prescription_RoomAssignment", "RoomAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoomAssignment>("HumanCareModel.FK_Prescription_RoomAssignment", "RoomAssignment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HumanCareModel", Name="Refer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Refer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Refer object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Refer CreateRefer(global::System.Int32 id)
        {
            Refer refer = new Refer();
            refer.id = id;
            return refer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Treatment_Refer", "Treatment")]
        public EntityCollection<Treatment> Treatments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Treatment>("HumanCareModel.FK_Treatment_Refer", "Treatment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Treatment>("HumanCareModel.FK_Treatment_Refer", "Treatment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HumanCareModel", Name="Room")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Room : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Room object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="roomNumber">Initial value of the roomNumber property.</param>
        public static Room CreateRoom(global::System.Int32 id, global::System.Int32 roomNumber)
        {
            Room room = new Room();
            room.id = id;
            room.roomNumber = roomNumber;
            return room;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 roomNumber
        {
            get
            {
                return _roomNumber;
            }
            set
            {
                OnroomNumberChanging(value);
                ReportPropertyChanging("roomNumber");
                _roomNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("roomNumber");
                OnroomNumberChanged();
            }
        }
        private global::System.Int32 _roomNumber;
        partial void OnroomNumberChanging(global::System.Int32 value);
        partial void OnroomNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_RoomAssignment_Room1", "RoomAssignment")]
        public EntityCollection<RoomAssignment> RoomAssignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoomAssignment>("HumanCareModel.FK_RoomAssignment_Room1", "RoomAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoomAssignment>("HumanCareModel.FK_RoomAssignment_Room1", "RoomAssignment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HumanCareModel", Name="RoomAssignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoomAssignment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoomAssignment object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="startTime">Initial value of the startTime property.</param>
        /// <param name="endTime">Initial value of the endTime property.</param>
        /// <param name="room">Initial value of the room property.</param>
        /// <param name="doctor">Initial value of the doctor property.</param>
        public static RoomAssignment CreateRoomAssignment(global::System.Int32 id, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Int32 room, global::System.Int32 doctor)
        {
            RoomAssignment roomAssignment = new RoomAssignment();
            roomAssignment.id = id;
            roomAssignment.startTime = startTime;
            roomAssignment.endTime = endTime;
            roomAssignment.room = room;
            roomAssignment.doctor = doctor;
            return roomAssignment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime startTime
        {
            get
            {
                return _startTime;
            }
            set
            {
                OnstartTimeChanging(value);
                ReportPropertyChanging("startTime");
                _startTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("startTime");
                OnstartTimeChanged();
            }
        }
        private global::System.DateTime _startTime;
        partial void OnstartTimeChanging(global::System.DateTime value);
        partial void OnstartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime endTime
        {
            get
            {
                return _endTime;
            }
            set
            {
                OnendTimeChanging(value);
                ReportPropertyChanging("endTime");
                _endTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("endTime");
                OnendTimeChanged();
            }
        }
        private global::System.DateTime _endTime;
        partial void OnendTimeChanging(global::System.DateTime value);
        partial void OnendTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 room
        {
            get
            {
                return _room;
            }
            set
            {
                OnroomChanging(value);
                ReportPropertyChanging("room");
                _room = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("room");
                OnroomChanged();
            }
        }
        private global::System.Int32 _room;
        partial void OnroomChanging(global::System.Int32 value);
        partial void OnroomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 doctor
        {
            get
            {
                return _doctor;
            }
            set
            {
                OndoctorChanging(value);
                ReportPropertyChanging("doctor");
                _doctor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("doctor");
                OndoctorChanged();
            }
        }
        private global::System.Int32 _doctor;
        partial void OndoctorChanging(global::System.Int32 value);
        partial void OndoctorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Appointment_RoomAssignment", "Appointment")]
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("HumanCareModel.FK_Appointment_RoomAssignment", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("HumanCareModel.FK_Appointment_RoomAssignment", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_RoomAssignment_Doctor1", "Doctor")]
        public Doctor Doctor1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("HumanCareModel.FK_RoomAssignment_Doctor1", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("HumanCareModel.FK_RoomAssignment_Doctor1", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> Doctor1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("HumanCareModel.FK_RoomAssignment_Doctor1", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("HumanCareModel.FK_RoomAssignment_Doctor1", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Prescription_RoomAssignment", "Prescription")]
        public EntityCollection<Prescription> Prescriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prescription>("HumanCareModel.FK_Prescription_RoomAssignment", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prescription>("HumanCareModel.FK_Prescription_RoomAssignment", "Prescription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_RoomAssignment_Room1", "Room")]
        public Room Room1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("HumanCareModel.FK_RoomAssignment_Room1", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("HumanCareModel.FK_RoomAssignment_Room1", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> Room1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("HumanCareModel.FK_RoomAssignment_Room1", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("HumanCareModel.FK_RoomAssignment_Room1", "Room", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Slot_RoomAssignment", "Slot")]
        public EntityCollection<Slot> Slots
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Slot>("HumanCareModel.FK_Slot_RoomAssignment", "Slot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Slot>("HumanCareModel.FK_Slot_RoomAssignment", "Slot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Treatment_RoomAssignment", "Treatment")]
        public EntityCollection<Treatment> Treatments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Treatment>("HumanCareModel.FK_Treatment_RoomAssignment", "Treatment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Treatment>("HumanCareModel.FK_Treatment_RoomAssignment", "Treatment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HumanCareModel", Name="Slot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Slot : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Slot object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="slots">Initial value of the slots property.</param>
        /// <param name="roomAssigned">Initial value of the roomAssigned property.</param>
        public static Slot CreateSlot(global::System.Int32 id, global::System.Int32 slots, global::System.Int32 roomAssigned)
        {
            Slot slot = new Slot();
            slot.id = id;
            slot.slots = slots;
            slot.roomAssigned = roomAssigned;
            return slot;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 slots
        {
            get
            {
                return _slots;
            }
            set
            {
                OnslotsChanging(value);
                ReportPropertyChanging("slots");
                _slots = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("slots");
                OnslotsChanged();
            }
        }
        private global::System.Int32 _slots;
        partial void OnslotsChanging(global::System.Int32 value);
        partial void OnslotsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 roomAssigned
        {
            get
            {
                return _roomAssigned;
            }
            set
            {
                OnroomAssignedChanging(value);
                ReportPropertyChanging("roomAssigned");
                _roomAssigned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("roomAssigned");
                OnroomAssignedChanged();
            }
        }
        private global::System.Int32 _roomAssigned;
        partial void OnroomAssignedChanging(global::System.Int32 value);
        partial void OnroomAssignedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Slot_RoomAssignment", "RoomAssignment")]
        public RoomAssignment RoomAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAssignment>("HumanCareModel.FK_Slot_RoomAssignment", "RoomAssignment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAssignment>("HumanCareModel.FK_Slot_RoomAssignment", "RoomAssignment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoomAssignment> RoomAssignmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAssignment>("HumanCareModel.FK_Slot_RoomAssignment", "RoomAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoomAssignment>("HumanCareModel.FK_Slot_RoomAssignment", "RoomAssignment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HumanCareModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HumanCareModel", Name="Treatment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Treatment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Treatment object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="treatmentDate">Initial value of the treatmentDate property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="patient">Initial value of the patient property.</param>
        /// <param name="roomAssigned">Initial value of the roomAssigned property.</param>
        public static Treatment CreateTreatment(global::System.Int32 id, global::System.DateTime treatmentDate, global::System.String description, global::System.Int32 patient, global::System.Int32 roomAssigned)
        {
            Treatment treatment = new Treatment();
            treatment.id = id;
            treatment.treatmentDate = treatmentDate;
            treatment.description = description;
            treatment.patient = patient;
            treatment.roomAssigned = roomAssigned;
            return treatment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime treatmentDate
        {
            get
            {
                return _treatmentDate;
            }
            set
            {
                OntreatmentDateChanging(value);
                ReportPropertyChanging("treatmentDate");
                _treatmentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("treatmentDate");
                OntreatmentDateChanged();
            }
        }
        private global::System.DateTime _treatmentDate;
        partial void OntreatmentDateChanging(global::System.DateTime value);
        partial void OntreatmentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 patient
        {
            get
            {
                return _patient;
            }
            set
            {
                OnpatientChanging(value);
                ReportPropertyChanging("patient");
                _patient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("patient");
                OnpatientChanged();
            }
        }
        private global::System.Int32 _patient;
        partial void OnpatientChanging(global::System.Int32 value);
        partial void OnpatientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 roomAssigned
        {
            get
            {
                return _roomAssigned;
            }
            set
            {
                OnroomAssignedChanging(value);
                ReportPropertyChanging("roomAssigned");
                _roomAssigned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("roomAssigned");
                OnroomAssignedChanged();
            }
        }
        private global::System.Int32 _roomAssigned;
        partial void OnroomAssignedChanging(global::System.Int32 value);
        partial void OnroomAssignedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> refer
        {
            get
            {
                return _refer;
            }
            set
            {
                OnreferChanging(value);
                ReportPropertyChanging("refer");
                _refer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("refer");
                OnreferChanged();
            }
        }
        private Nullable<global::System.Int32> _refer;
        partial void OnreferChanging(Nullable<global::System.Int32> value);
        partial void OnreferChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Treatment_Refer", "Refer")]
        public Refer Refer1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Refer>("HumanCareModel.FK_Treatment_Refer", "Refer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Refer>("HumanCareModel.FK_Treatment_Refer", "Refer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Refer> Refer1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Refer>("HumanCareModel.FK_Treatment_Refer", "Refer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Refer>("HumanCareModel.FK_Treatment_Refer", "Refer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HumanCareModel", "FK_Treatment_RoomAssignment", "RoomAssignment")]
        public RoomAssignment RoomAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAssignment>("HumanCareModel.FK_Treatment_RoomAssignment", "RoomAssignment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAssignment>("HumanCareModel.FK_Treatment_RoomAssignment", "RoomAssignment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoomAssignment> RoomAssignmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAssignment>("HumanCareModel.FK_Treatment_RoomAssignment", "RoomAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoomAssignment>("HumanCareModel.FK_Treatment_RoomAssignment", "RoomAssignment", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
